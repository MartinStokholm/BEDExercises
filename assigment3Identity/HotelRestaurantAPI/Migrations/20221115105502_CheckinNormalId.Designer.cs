// <auto-generated />
using HotelRestaurantAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelRestaurantAPI.Migrations
{
    [DbContext(typeof(HotelDataContext))]
    [Migration("20221115105502_CheckinNormalId")]
    partial class CheckinNormalId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HotelRestaurantAPI.Models.CheckedIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<int>("DailyBreakfastDay")
                        .HasColumnType("int");

                    b.Property<int>("DailyBreakfastMonth")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DailyBreakfastDay", "DailyBreakfastMonth");

                    b.ToTable("CheckedIn");
                });

            modelBuilder.Entity("HotelRestaurantAPI.Models.DailyBreakfast", b =>
                {
                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Day", "Month");

                    b.ToTable("DailyBreakfasts");
                });

            modelBuilder.Entity("HotelRestaurantAPI.Models.Expected", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Day", "Month")
                        .IsUnique();

                    b.ToTable("Expected");
                });

            modelBuilder.Entity("HotelRestaurantAPI.Models.CheckedIn", b =>
                {
                    b.HasOne("HotelRestaurantAPI.Models.DailyBreakfast", "DailyBreakfast")
                        .WithMany("CheckedIn")
                        .HasForeignKey("DailyBreakfastDay", "DailyBreakfastMonth")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyBreakfast");
                });

            modelBuilder.Entity("HotelRestaurantAPI.Models.Expected", b =>
                {
                    b.HasOne("HotelRestaurantAPI.Models.DailyBreakfast", "DailyBreakfast")
                        .WithOne("Expected")
                        .HasForeignKey("HotelRestaurantAPI.Models.Expected", "Day", "Month")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyBreakfast");
                });

            modelBuilder.Entity("HotelRestaurantAPI.Models.DailyBreakfast", b =>
                {
                    b.Navigation("CheckedIn");

                    b.Navigation("Expected")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
